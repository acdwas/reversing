
from z3 import *

l = [0x51, 0x7c, 0x6a, 0x7b, 0x67, 0x52, 0xFD, 0x16, 0xA4, 0x89, 0xBD, 0x92, 0x80, 0x13, 0x41, 0x54, 0xA0, 0x8D, 0x45, 0x18, 0x81, 0xDE, 0xFC, 0x95, 0xF0, 0x16, 0x79, 0x1A, 0x15, 0x5B, 0x75, 0x1F]

s = Solver()

a = [BitVec('a{}'.format(x), 32) for x in range(0x20)]


def fun(a, i):
    a = a ^ 0x20 - i
    return a


def fun1(a, i):
    if (i & 1) == 0:
        a = (((a << 0x1a) >> 0x18) & 0xff) | a >> 6
    else:
        a = a >> 2 | (((a << 0x1e) >> 0x18) & 0xff)
    return a


for i in range(0x20):
    s.add(a[i] > 0x20, a[i] < 0x7f)

for i in range(5):
    s.add(fun(a[i], i) == l[i])

for i in range(5, 0x20):
    s.add(fun1(fun(a[i], i), i) == l[i])

s.check()
m = s.model()

w = ''
for i in range(0x20):
    w += chr(m[a[i]].as_long())

print(w)
