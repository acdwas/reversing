
from z3 import *

s = Solver()

l = [0xBC, 0x52, 0xE8, 0xEA, 0x50, 0xEA, 0xE8, 0xA7, 0xE8, 0xEA, 0x93, 0x52, 0xE8, 0xEA, 0x50, 0xEA, 0xE8, 0xDF, 0xE8, 0xEA, 0xDF, 0x52, 0xE8, 0xEA, 0x50, 0xEA, 0xE8, 0xDA, 0xE8, 0xEA, 0xDA, 0x52, 0xE8, 0xEA, 0x50, 0xEA, 0xE8, 0xD2, 0xE8, 0xEA, 0xD0, 0x52, 0xE8, 0xEA, 0x50, 0xEA, 0xE8, 0xDD,
     0xE8, 0xEA, 0xC4, 0x52, 0xE8, 0xEA, 0x50, 0xEA, 0xE8, 0xD3, 0xE8, 0xEA, 0xDA, 0x52, 0xE8, 0xEA, 0x50, 0xEA, 0xE8, 0xD8, 0xE8, 0xEA, 0xDF, 0x52, 0xE8, 0xEA, 0x50, 0xEA, 0xE8, 0xDE, 0xE8, 0xEA, 0xDE, 0x52, 0xE8, 0xEA, 0x50, 0xEA, 0xE8, 0xDF, 0xE8, 0xEA, 0x95, 0x52, 0xE8, 0xEA, 0xEA, 0x00]

v26 = 0
a1 = BitVec('a1', 8)

for i in range(v26):
    l[2*i] += 1
    l[2*i+1] += 1

j = 0
while True:
    if j < 0x5f and j != 0x5e:
        l[j] ^= l[j+1]
        l[j+1] ^= l[j]
        l[j] ^= l[j+1]
        if simplify(If(j < 2 * v26, 1, 0)) == 1:
            l[j] -= 1
    else:
        break
    j += 2

for i in range(v26):
    l[2 * i + 1] -= 1

for j in range(0x5F):
    if (j % 2):
        l[j] ^= a1 - 1
    else:
        l[j] ^= a1 + 1

v1 = 0
for i in range(0x5f):
    v1 += l[i]
s.add(v1 == 4693)

s.check()
m = s.model()

w = ''
for i in range(0x5f):
    x = m.evaluate(l[i]).as_long()
    if 0x20 < x < 0x7f:
        w += chr(x)

print('FLAG: ', w)

# FLAG: TM{5702887,9227465}
